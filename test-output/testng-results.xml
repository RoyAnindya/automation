<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="3" passed="1">
  <reporter-output>
    <line>
      <![CDATA[Open ndtv page in browser and navigate to weather page]]>
    </line>
    <line>
      <![CDATA[Open ndtv page in browser and navigate to weather page]]>
    </line>
    <line>
      <![CDATA[Open ndtv page in browser and navigate to weather page]]>
    </line>
    <line>
      <![CDATA[Get all the cities listed in the dropdown]]>
    </line>
    <line>
      <![CDATA[Get all the cities listed in the dropdown]]>
    </line>
    <line>
      <![CDATA[Get all the cities listed in the dropdown]]>
    </line>
    <line>
      <![CDATA[Validate if Bengaluru present in the list of avaliable cities]]>
    </line>
    <line>
      <![CDATA[Enter the Bengaluru and get the weather details]]>
    </line>
    <line>
      <![CDATA[Validate if Kolkata present in the list of avaliable cities]]>
    </line>
    <line>
      <![CDATA[Enter the Kolkata and get the weather details]]>
    </line>
    <line>
      <![CDATA[Validate if Monteswar present in the list of avaliable cities]]>
    </line>
    <line>
      <![CDATA[Get the tempature in degrees and farenheit unit of the selected city]]>
    </line>
    <line>
      <![CDATA[Tempareture of the city in degree as double unit 24.0]]>
    </line>
    <line>
      <![CDATA[Tempareture of the city in farenheit as double unit 75.0]]>
    </line>
    <line>
      <![CDATA[Trigger api response to get the temprature from reponse]]>
    </line>
    <line>
      <![CDATA[Get the tempature in degrees and farenheit unit of the selected city]]>
    </line>
    <line>
      <![CDATA[The temperature received from the api response is 299.65 in pascal unit]]>
    </line>
    <line>
      <![CDATA[Coverted temperature received from api response to degress is 26.5]]>
    </line>
    <line>
      <![CDATA[Coverted temperature received from api response to farenheit is 79.7]]>
    </line>
    <line>
      <![CDATA[Verify temerature for degrees received in ui 24.0 along with the tempreature received in api response 26.5 is falling under permissable variance of 5.0]]>
    </line>
    <line>
      <![CDATA[Verify temerature for farenheit received in ui 75.0 along with the tempreature received in api response 79.7 is falling under permissable variance of 10.0]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="84587" started-at="2020-09-14T16:49:04 IST" finished-at="2020-09-14T16:50:28 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="84587" started-at="2020-09-14T16:49:04 IST" finished-at="2020-09-14T16:50:28 IST">
      <class name="com.qa.ndtv.test.weather.TemperatureTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="beforeTest" is-config="true" duration-ms="14" started-at="2020-09-14T16:49:04 IST" finished-at="2020-09-14T16:49:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="customBeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="customBeforeMethod" is-config="true" duration-ms="54605" started-at="2020-09-14T16:49:04 IST" finished-at="2020-09-14T16:49:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.ndtv.test.weather.TemperatureTest.testTemperature(java.lang.String,double,double) throws com.qa.ndtv.core.BaseException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customBeforeMethod -->
        <test-method status="PASS" signature="customBeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="customBeforeMethod" is-config="true" duration-ms="54428" started-at="2020-09-14T16:49:04 IST" finished-at="2020-09-14T16:49:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.ndtv.test.weather.TemperatureTest.testTemperature(java.lang.String,double,double) throws com.qa.ndtv.core.BaseException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customBeforeMethod -->
        <test-method status="PASS" signature="customBeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="customBeforeMethod" is-config="true" duration-ms="57204" started-at="2020-09-14T16:49:04 IST" finished-at="2020-09-14T16:50:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.ndtv.test.weather.TemperatureTest.testTemperature(java.lang.String,double,double) throws com.qa.ndtv.core.BaseException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customBeforeMethod -->
        <test-method status="FAIL" signature="testTemperature(java.lang.String, double, double)[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="testTemperature" duration-ms="17591" started-at="2020-09-14T16:49:59 IST" data-provider="testDataCityTemp" finished-at="2020-09-14T16:50:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kolkata]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[empty String]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: empty String
at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
at sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
at java.lang.Double.parseDouble(Double.java:538)
at com.qa.ndtv.test.weather.TemperatureTest.testTemperature(TemperatureTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
            <line>
              <![CDATA[Open ndtv page in browser and navigate to weather page]]>
            </line>
            <line>
              <![CDATA[Get all the cities listed in the dropdown]]>
            </line>
            <line>
              <![CDATA[Validate if Kolkata present in the list of avaliable cities]]>
            </line>
            <line>
              <![CDATA[Enter the Kolkata and get the weather details]]>
            </line>
            <line>
              <![CDATA[Get the tempature in degrees and farenheit unit of the selected city]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTemperature -->
        <test-method status="PASS" signature="testTemperature(java.lang.String, double, double)[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="testTemperature" duration-ms="28818" started-at="2020-09-14T16:49:59 IST" data-provider="testDataCityTemp" finished-at="2020-09-14T16:50:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bengaluru]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Open ndtv page in browser and navigate to weather page]]>
            </line>
            <line>
              <![CDATA[Get all the cities listed in the dropdown]]>
            </line>
            <line>
              <![CDATA[Validate if Bengaluru present in the list of avaliable cities]]>
            </line>
            <line>
              <![CDATA[Enter the Bengaluru and get the weather details]]>
            </line>
            <line>
              <![CDATA[Get the tempature in degrees and farenheit unit of the selected city]]>
            </line>
            <line>
              <![CDATA[Tempareture of the city in degree as double unit 24.0]]>
            </line>
            <line>
              <![CDATA[Tempareture of the city in farenheit as double unit 75.0]]>
            </line>
            <line>
              <![CDATA[Trigger api response to get the temprature from reponse]]>
            </line>
            <line>
              <![CDATA[The temperature received from the api response is 299.65 in pascal unit]]>
            </line>
            <line>
              <![CDATA[Coverted temperature received from api response to degress is 26.5]]>
            </line>
            <line>
              <![CDATA[Coverted temperature received from api response to farenheit is 79.7]]>
            </line>
            <line>
              <![CDATA[Verify temerature for degrees received in ui 24.0 along with the tempreature received in api response 26.5 is falling under permissable variance of 5.0]]>
            </line>
            <line>
              <![CDATA[Verify temerature for farenheit received in ui 75.0 along with the tempreature received in api response 79.7 is falling under permissable variance of 10.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTemperature -->
        <test-method status="FAIL" signature="testTemperature(java.lang.String, double, double)[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="testTemperature" duration-ms="12221" started-at="2020-09-14T16:50:01 IST" data-provider="testDataCityTemp" finished-at="2020-09-14T16:50:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Monteswar]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.qa.ndtv.test.weather.TemperatureTest.testTemperature(TemperatureTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Open ndtv page in browser and navigate to weather page]]>
            </line>
            <line>
              <![CDATA[Get all the cities listed in the dropdown]]>
            </line>
            <line>
              <![CDATA[Validate if Monteswar present in the list of avaliable cities]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTemperature -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="afterMethod" is-config="true" duration-ms="186" started-at="2020-09-14T16:50:14 IST" finished-at="2020-09-14T16:50:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="afterMethod" is-config="true" duration-ms="643" started-at="2020-09-14T16:50:16 IST" finished-at="2020-09-14T16:50:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.ndtv.test.weather.TemperatureTest@3712b94]" name="afterMethod" is-config="true" duration-ms="385" started-at="2020-09-14T16:50:28 IST" finished-at="2020-09-14T16:50:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.qa.ndtv.test.weather.TemperatureTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
